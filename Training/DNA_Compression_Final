{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DNA_Compression_Final","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOpBB6gPSTwdJ6QCkmplF3t"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YOoAdmtcoqJn","executionInfo":{"status":"ok","timestamp":1638783551092,"user_tz":-330,"elapsed":25641,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"ddbad3ab-8d72-4bec-87c8-5dc4a6a9b563"},"source":["from google.colab import drive\n","drive.mount(\"/content/drive\")"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"wVvFJxVFosin","executionInfo":{"status":"ok","timestamp":1638783558180,"user_tz":-330,"elapsed":4610,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}}},"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import math\n","from keras.layers import Embedding, Dense, LSTM, Dense, Input, concatenate\n","from keras.models import Model\n","import tensorflow as tf\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","import datetime\n","from keras.regularizers import l2\n","from keras.models import load_model\n","import matplotlib.pyplot as plt\n","import matplotlib.ticker as ticker\n","import sys\n","import time\n","import zlib\n","from sklearn import utils\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, matthews_corrcoef, confusion_matrix\n","import warnings\n","import pickle\n","warnings.filterwarnings(\"ignore\") \n","# warnings.filterwarnings('once')"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"I59Bn6PbpCrY"},"source":["Digital DNA\n","Model account behaviour by defining the following alphabet, of cardinality N = 3\n","\n","$B^3_{type} = {\\{A, C, T\\}}$\n","\n","A $\\leftarrow$ tweet,\n","\n","C $\\leftarrow$ reply,\n","\n","T $\\leftarrow$ retweet"]},{"cell_type":"code","metadata":{"id":"ZkcVBqAVpE7e"},"source":["### Users\n","\n","# Genuine accounts.\n","gen = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/genuine_accounts.csv/users.csv')\n","\n","# Social spambots.\n","ss1 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/social_spambots_1.csv/users.csv')\n","ss2 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/social_spambots_2.csv/users.csv')\n","ss3 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/social_spambots_3.csv/users.csv')\n","\n","# Traditional spambots.\n","ts1 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/traditional_spambots_1.csv/users.csv')\n","ts2 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/traditional_spambots_2.csv/users.csv')\n","ts3 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/traditional_spambots_3.csv/users.csv')\n","ts4 = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/traditional_spambots_4.csv/users.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"oEyAFe7xpG1C"},"source":["### Tweets\n","\n","# Genuine accounts.\n","gen_tweets = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/genuine_accounts.csv/tweets.csv', usecols=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25], skiprows = 500, nrows = 4000000)\n","# gen_tweets = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/genuine_accounts.csv/tweets.csv', usecols=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25])\n","\n","# Social spambots.\n","ss1_tweets = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/social_spambots_1.csv/tweets.csv')\n","ss2_tweets = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/social_spambots_2.csv/tweets.csv')\n","ss3_tweets = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/social_spambots_3.csv/tweets.csv')\n","\n","# Traditional spambots.\n","ts1_tweets = pd.read_csv('/content/drive/MyDrive/SAAS-2121/Datasets/datasets_full.csv/traditional_spambots_1.csv/tweets.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KZhyBg3ipU1u"},"source":["gen_tweets.columns = [\"id\",\"text\",\"source\",\"user_id\",\"truncated\",\"in_reply_to_status_id\",\"in_reply_to_user_id\",\"in_reply_to_screen_name\",\"retweeted_status_id\",\"drop1\",\"geo\",\"place\",\"contributors\",\"retweet_count\",\"reply_count\",\"favorite_count\",\"favorited\",\"retweeted\",\"possibly_sensitive\",\"num_hashtags\",\"num_urls\",\"num_mentions\",\"created_at\",\"timestamp\",\"crawled_at\",\"updated\",]\n","gen_tweets = gen_tweets.drop(['drop1'], axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JbteGR5t2Loz"},"source":["gen_tweets[\"user_id\"] = pd.to_numeric(gen_tweets[\"user_id\"], errors='coerce')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YxcIsEFErfqS","executionInfo":{"elapsed":13,"status":"ok","timestamp":1634916951750,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"e16a2740-7a79-4f54-80bb-d689a00d4ccd"},"source":["print(\"Genuine\", len(gen))\n","print(\"Spam 1\", len(ss1))\n","print(\"Genuine\", len(gen_tweets))\n","print(\"Spam 1\", len(ss1_tweets))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Genuine 3474\n","Spam 1 991\n","Genuine 4000000\n","Spam 1 1610034\n"]}]},{"cell_type":"code","metadata":{"id":"duA2raFRr4vC"},"source":["# Genuine accounts in test set 1.\n","# gen_test_1 = gen[gen['test_set_1'] == 1]\n","gen_test_1 = gen\n","\n","# Social spambots in test set 1.\n","ss1_test_1 = ss1[ss1['test_set_1'] == 1]\n","\n","\n","# Tweets for genuine accounts in test set 1.\n","# gen_tweets_test1 = gen_tweets\n","gen_tweets_test1 = gen_tweets[gen_tweets['user_id'].isin(gen_test_1['id'])]\n","\n","# Tweets for spambot accounts in test set 1.\n","ss1_tweets_test1 = ss1_tweets[ss1_tweets['user_id'].isin(ss1_test_1['id'])]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HisPNH8psRKm","executionInfo":{"elapsed":7,"status":"ok","timestamp":1634844664506,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"fdadd86d-dece-439a-88de-a6dec0d6083c"},"source":["print(\"Genuine\", len(gen_test_1))\n","print(\"Spam1\", len(ss1_test_1))\n","print(\"Genuine\", len(gen_tweets_test1))\n","print(\"Spam1\", len(ss1_tweets_test1))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Genuine 3474\n","Spam1 991\n","Genuine 3858110\n","Spam1 1610034\n"]}]},{"cell_type":"code","metadata":{"id":"b_O-FXj5EQh0","executionInfo":{"status":"ok","timestamp":1638783573574,"user_tz":-330,"elapsed":604,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}}},"source":["model_attributes = {'tweet_id': [1450902188155277313, 1450901590689259525, 1447453708342607872, 1447439852400644097, 1445010546827223047, 1435997529414328322, 1434907696772239361, 1434559910394544128, 1434543678324809737, 1434466558202376196, 1434390852923584513, 1434365690568343555, 1434154524898332680, 1434109882408452098, 1434026528078139395, 1434021316206596100, 1434006793659633670, 1434005926759976973, 1434000775051550721, 1433999853688811520, 1433667592489603077, 1433661657427841024, 1432614943971418115, 1432227594846363660, 1432225392979415042, 1429786546526330881, 1429094128118206465, 1427581626024751107, 1426092374648754178, 1426092337592107013, 1426047099230056454, 1426045101990502401, 1426044753758490626, 1425681730476777481, 1425413752824885250, 1424942060847595521, 1424368903136837635, 1423997740703383553, 1419100245326110721, 1417722685467942914, 1417721933680963585, 1275457698629169157, 1272156225430360065, 1271127377360244736, 1271125207780974593], 'truncated_list': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], 'retweeted_status_id': [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], 'in_reply_to_status_id': [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], 'retweet_count': [0, 0, 91701, 235, 3989, 509, 11, 165, 102, 8285, 51, 48, 1336, 693, 365, 23, 1191, 154, 160, 195, 642, 125, 267, 4555, 121, 9, 850, 3175, 6, 7, 454, 1, 23, 144, 181, 45, 3187, 1332, 0, 0, 0, 0, 0, 0, 0], 'timestamp': ['Wed Oct 20 19:10:12 +0000 2021', 'Wed Oct 20 19:07:50 +0000 2021', 'Mon Oct 11 06:47:11 +0000 2021', 'Mon Oct 11 05:52:07 +0000 2021', 'Mon Oct 04 12:58:56 +0000 2021', 'Thu Sep 09 16:04:25 +0000 2021', 'Mon Sep 06 15:53:48 +0000 2021', 'Sun Sep 05 16:51:50 +0000 2021', 'Sun Sep 05 15:47:20 +0000 2021', 'Sun Sep 05 10:40:53 +0000 2021', 'Sun Sep 05 05:40:03 +0000 2021', 'Sun Sep 05 04:00:04 +0000 2021', 'Sat Sep 04 14:00:58 +0000 2021', 'Sat Sep 04 11:03:35 +0000 2021', 'Sat Sep 04 05:32:21 +0000 2021', 'Sat Sep 04 05:11:39 +0000 2021', 'Sat Sep 04 04:13:56 +0000 2021', 'Sat Sep 04 04:10:30 +0000 2021', 'Sat Sep 04 03:50:01 +0000 2021', 'Sat Sep 04 03:46:22 +0000 2021', 'Fri Sep 03 05:46:04 +0000 2021', 'Fri Sep 03 05:22:29 +0000 2021', 'Tue Aug 31 08:03:13 +0000 2021', 'Mon Aug 30 06:24:02 +0000 2021', 'Mon Aug 30 06:15:17 +0000 2021', 'Mon Aug 23 12:44:11 +0000 2021', 'Sat Aug 21 14:52:46 +0000 2021', 'Tue Aug 17 10:42:37 +0000 2021', 'Fri Aug 13 08:04:52 +0000 2021', 'Fri Aug 13 08:04:43 +0000 2021', 'Fri Aug 13 05:04:57 +0000 2021', 'Fri Aug 13 04:57:01 +0000 2021', 'Fri Aug 13 04:55:38 +0000 2021', 'Thu Aug 12 04:53:07 +0000 2021', 'Wed Aug 11 11:08:16 +0000 2021', 'Tue Aug 10 03:53:56 +0000 2021', 'Sun Aug 08 13:56:24 +0000 2021', 'Sat Aug 07 13:21:32 +0000 2021', 'Sun Jul 25 01:00:38 +0000 2021', 'Wed Jul 21 05:46:42 +0000 2021', 'Wed Jul 21 05:43:43 +0000 2021', 'Tue Jun 23 15:56:26 +0000 2020', 'Sun Jun 14 13:17:34 +0000 2020', 'Thu Jun 11 17:09:17 +0000 2020', 'Thu Jun 11 17:00:40 +0000 2020'], 'user_id': '840885883054280705'}"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"_WuUhh0wEc5x","executionInfo":{"status":"ok","timestamp":1638783576387,"user_tz":-330,"elapsed":1205,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"443d22eb-47bf-4546-a0fc-c29f25dac97d"},"source":["df = pd.DataFrame(data=model_attributes)\n","df.head()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tweet_id</th>\n","      <th>truncated_list</th>\n","      <th>retweeted_status_id</th>\n","      <th>in_reply_to_status_id</th>\n","      <th>retweet_count</th>\n","      <th>timestamp</th>\n","      <th>user_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1450902188155277313</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Wed Oct 20 19:10:12 +0000 2021</td>\n","      <td>840885883054280705</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1450901590689259525</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Wed Oct 20 19:07:50 +0000 2021</td>\n","      <td>840885883054280705</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1447453708342607872</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>91701</td>\n","      <td>Mon Oct 11 06:47:11 +0000 2021</td>\n","      <td>840885883054280705</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1447439852400644097</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>235</td>\n","      <td>Mon Oct 11 05:52:07 +0000 2021</td>\n","      <td>840885883054280705</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1445010546827223047</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3989</td>\n","      <td>Mon Oct 04 12:58:56 +0000 2021</td>\n","      <td>840885883054280705</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              tweet_id  ...             user_id\n","0  1450902188155277313  ...  840885883054280705\n","1  1450901590689259525  ...  840885883054280705\n","2  1447453708342607872  ...  840885883054280705\n","3  1447439852400644097  ...  840885883054280705\n","4  1445010546827223047  ...  840885883054280705\n","\n","[5 rows x 7 columns]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NZXzDVyaFbEI","executionInfo":{"status":"ok","timestamp":1638783724034,"user_tz":-330,"elapsed":443,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"659fbbc5-c8ec-46b8-f5e4-0794f4b1fa2f"},"source":["res1 = create_dna_from_tweets(df)\n","res1.head()"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["before 45\n","after 1\n"]},{"output_type":"execute_result","data":{"text/plain":["user_id\n","840885883054280705    TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA\n","Name: DNA, dtype: object"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":213},"id":"FLYL4NJxObJd","executionInfo":{"status":"ok","timestamp":1638783682374,"user_tz":-330,"elapsed":14,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"45f64559-0e68-4ce8-bd64-5407e943d618"},"source":["res1 = compress_dna_df(res1)\n","res1.head()"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["user_id\n","840885883054280705    b'TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA'\n","Name: DNA, dtype: object\n","user_id\n","840885883054280705    b'x\\x9c\\x0bqt&\\x02\\x84\\x848\\x82\\x00\\x00\\x12\\x8...\n","Name: DNA, dtype: object\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dna</th>\n","      <th>original_dna_size</th>\n","      <th>compressed_dna_size</th>\n","      <th>compression_ratio</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>840885883054280705</th>\n","      <td>TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA</td>\n","      <td>78</td>\n","      <td>50</td>\n","      <td>1.56</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                              dna  ...  compression_ratio\n","user_id                                                            ...                   \n","840885883054280705  TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA  ...               1.56\n","\n","[1 rows x 4 columns]"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"f6fGDCDbpqnS","executionInfo":{"elapsed":325,"status":"ok","timestamp":1634917102505,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"65990e2f-8856-4d8d-c15e-dea6d4dbe397"},"source":["res1['dna'][0]"],"execution_count":null,"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA'"]},"execution_count":34,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"VsQDtTQa3GDI","executionInfo":{"status":"ok","timestamp":1638783629699,"user_tz":-330,"elapsed":7495,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}}},"source":["def create_dna_from_tweets(tweets_df):\n","    '''For each user id in tweets_df return a digital DNA string based on posting behaviour.'''\n","    \n","    # Add columns for counts of tweets, replies and retweets.\n","    tweets_df['num_retweets'] = np.where(tweets_df['retweeted_status_id'] == 0, 0, 1)\n","    tweets_df['num_replies'] = np.where(tweets_df['in_reply_to_status_id'] == 0, 0, 1)\n","    tweets_df['num_tweets'] = np.where((tweets_df['num_retweets'] == 0) & (tweets_df['num_replies'] == 0), 1, 0)\n","\n","    # DNA alphabet for tweet (A), retweet (C) and reply (T).\n","    tweets = tweets_df['num_tweets'] == 1\n","    retweets = tweets_df['num_retweets'] == 1\n","    replies = tweets_df['num_replies'] == 1\n","    tweets_df.loc[:, 'DNA'] = np.where(retweets, 'C', np.where(replies, 'T', 'A'))\n","    # print(tweets_df['num_tweets'] == 1)\n","\n","    # Sort tweets by timestamp.\n","    tweets_df = tweets_df[['user_id', 'timestamp', 'DNA']]\n","    # tweets_df = tweets_df.sort_values(by=['timestamp'])\n","    # print(tweets_df['timestamp'])\n","    print(\"before\", len(tweets_df))\n","\n","    # Create digital DNA string for account.\n","    dna = tweets_df.groupby(by=['user_id'])['DNA'].agg(lambda x: ''.join(x))\n","    print(\"after\", len(dna))\n","    return dna"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-YMsm4lzOaE5","executionInfo":{"status":"ok","timestamp":1638783648833,"user_tz":-330,"elapsed":389,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"9b3ca0bd-aec0-45d8-d61f-33d2ffe6cb16"},"source":["res1 = create_dna_from_tweets(df)"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["before 45\n","after 1\n"]}]},{"cell_type":"code","metadata":{"id":"lFGTgaHF3GY8","executionInfo":{"status":"ok","timestamp":1638783673579,"user_tz":-330,"elapsed":455,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}}},"source":["def compress_dna_df(dna):\n","    '''Return a dataframe with compression facts for a series of dna.'''\n","\n","    # Convert DNA in string object to bytes object.\n","    dna_bytes = dna.apply(lambda s: s.encode('utf-8'))\n","    print(dna_bytes)\n","\n","    # Run compression on each DNA string in the sample.\n","    dna_compressed = dna_bytes.apply(lambda b: zlib.compress(b))\n","    print(dna_compressed)\n","\n","    # Create dataframe with compression facts.\n","    dna_df = pd.DataFrame({'dna': dna,\n","                           'original_dna_size': dna_bytes.apply(sys.getsizeof), \n","                           'compressed_dna_size': dna_compressed.apply(sys.getsizeof)})\n","    \n","    dna_df['compression_ratio'] = dna_df['original_dna_size'] / dna_df['compressed_dna_size']\n","    \n","    return dna_df"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"vNJAY0Q6Hscz","executionInfo":{"status":"ok","timestamp":1638783860333,"user_tz":-330,"elapsed":380,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"27d8a33f-6bae-4eda-fa18-05b288a55343"},"source":["dna_bytes = res1.apply(lambda s: s.encode('utf-8'))\n","print(res1)\n","print(dna_bytes)\n","dna_compressed = dna_bytes.apply(lambda b: zlib.compress(b))\n","print(dna_compressed)\n","dna_df = pd.DataFrame({'dna': res1,\n","                           'original_dna_size': dna_bytes.apply(sys.getsizeof), \n","                           'compressed_dna_size': dna_compressed.apply(sys.getsizeof)})\n","    \n","dna_df['compression_ratio'] = dna_df['original_dna_size'] / dna_df['compressed_dna_size']\n","dna_df.head()"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["user_id\n","840885883054280705    TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA\n","Name: DNA, dtype: object\n","user_id\n","840885883054280705    b'TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA'\n","Name: DNA, dtype: object\n","user_id\n","840885883054280705    b'x\\x9c\\x0bqt&\\x02\\x84\\x848\\x82\\x00\\x00\\x12\\x8...\n","Name: DNA, dtype: object\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dna</th>\n","      <th>original_dna_size</th>\n","      <th>compressed_dna_size</th>\n","      <th>compression_ratio</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>840885883054280705</th>\n","      <td>TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA</td>\n","      <td>78</td>\n","      <td>50</td>\n","      <td>1.56</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                              dna  ...  compression_ratio\n","user_id                                                            ...                   \n","840885883054280705  TACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCTTAAAAA  ...               1.56\n","\n","[1 rows x 4 columns]"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qNS1FrL13IWm","executionInfo":{"elapsed":5825,"status":"ok","timestamp":1634916964646,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"81adfeba-5c2b-4efa-88a6-17f52521d8d1"},"source":["gen_dna_test1 = create_dna_from_tweets(gen_tweets_test1)\n","\n","# DNA for spambots in test set 1.\n","ss1_dna_test1 = create_dna_from_tweets(ss1_tweets_test1)\n","\n","\n","# # DNA string compression for genuine accounts in test set 1.\n","gen_dna_test1 = compress_dna_df(gen_dna_test1)\n","\n","# # DNA string compression for spambots in test set 1.\n","ss1_dna_test1 = compress_dna_df(ss1_dna_test1)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["before 3858110\n","after 1516\n","before 1610034\n","after 991\n"]}]},{"cell_type":"code","metadata":{"id":"A9Zf9rkv3gHy"},"source":["# Add a column for label to the dataframes.\n","gen_dna_test1['label'] = 0\n","ss1_dna_test1['label'] = 1"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N8vFrRHh_v-_","executionInfo":{"elapsed":21,"status":"ok","timestamp":1634917011241,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"afb6fba9-c30b-4ed2-a5d8-ca0b36acce59"},"source":["print(\"Genuine\", len(gen_dna_test1))\n","print(\"Spam1\", len(ss1_dna_test1))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Genuine 1516\n","Spam1 991\n"]}]},{"cell_type":"code","metadata":{"id":"H3GqsgtazlnS"},"source":["# Add a column for account type to the dataframes.\n","gen_dna_test1['Account Type'] = 'Genuine'\n","ss1_dna_test1['Account Type'] = 'Bot'\n","\n","# Combine all samples into a single dataframe.\n","all_dna = pd.concat([gen_dna_test1, ss1_dna_test1])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"N5tMY2g-3Ld9","executionInfo":{"elapsed":17,"status":"ok","timestamp":1634917014631,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"0fd2d4f5-c771-4ab8-d39a-3e61daf09eb5"},"source":["gen_dna_test1.head()"],"execution_count":null,"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dna</th>\n","      <th>original_dna_size</th>\n","      <th>compressed_dna_size</th>\n","      <th>compression_ratio</th>\n","      <th>label</th>\n","      <th>Account Type</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>678033.0</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>2653</td>\n","      <td>59</td>\n","      <td>44.966102</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","    <tr>\n","      <th>722623.0</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3180</td>\n","      <td>60</td>\n","      <td>53.000000</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","    <tr>\n","      <th>755116.0</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3159</td>\n","      <td>60</td>\n","      <td>52.650000</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","    <tr>\n","      <th>755746.0</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3261</td>\n","      <td>60</td>\n","      <td>54.350000</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","    <tr>\n","      <th>785080.0</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3218</td>\n","      <td>60</td>\n","      <td>53.633333</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                        dna  ...  Account Type\n","user_id                                                      ...              \n","678033.0  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","722623.0  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","755116.0  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","755746.0  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","785080.0  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","\n","[5 rows x 6 columns]"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"OCH0lKo-3UXf","executionInfo":{"elapsed":592,"status":"ok","timestamp":1634844700278,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"8babef7f-635e-4cc4-daf2-34a5bd1f3c82"},"source":["ss1_dna_test1.head()"],"execution_count":null,"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dna</th>\n","      <th>original_dna_size</th>\n","      <th>compressed_dna_size</th>\n","      <th>compression_ratio</th>\n","      <th>label</th>\n","      <th>Account Type</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24858289</th>\n","      <td>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...</td>\n","      <td>2551</td>\n","      <td>98</td>\n","      <td>26.030612</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","    <tr>\n","      <th>33212890</th>\n","      <td>ACAAAACAACACTCAAACAAAATTTTAAAAACACAACCAATACACA...</td>\n","      <td>3237</td>\n","      <td>761</td>\n","      <td>4.253614</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","    <tr>\n","      <th>39773427</th>\n","      <td>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...</td>\n","      <td>3249</td>\n","      <td>283</td>\n","      <td>11.480565</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","    <tr>\n","      <th>57007623</th>\n","      <td>AAAAAAACAAAAAAAAAAAAAAAACAAATACATAAAAAAAAAAAAA...</td>\n","      <td>3264</td>\n","      <td>628</td>\n","      <td>5.197452</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","    <tr>\n","      <th>63258466</th>\n","      <td>AAAAAAAAATATATATAAAATAAAAAACACAACAAAAATAATACAA...</td>\n","      <td>3234</td>\n","      <td>698</td>\n","      <td>4.633238</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                        dna  ...  Account Type\n","user_id                                                      ...              \n","24858289  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...  ...           Bot\n","33212890  ACAAAACAACACTCAAACAAAATTTTAAAAACACAACCAATACACA...  ...           Bot\n","39773427  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...  ...           Bot\n","57007623  AAAAAAACAAAAAAAAAAAAAAAACAAATACATAAAAAAAAAAAAA...  ...           Bot\n","63258466  AAAAAAAAATATATATAAAATAAAAAACACAACAAAAATAATACAA...  ...           Bot\n","\n","[5 rows x 6 columns]"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"4pw-ELPS3XuM","executionInfo":{"elapsed":6,"status":"ok","timestamp":1634844700760,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"bbc8da2e-75fc-4e64-96d7-a0996cfa8969"},"source":["all_dna.sample(20)"],"execution_count":null,"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dna</th>\n","      <th>original_dna_size</th>\n","      <th>compressed_dna_size</th>\n","      <th>compression_ratio</th>\n","      <th>label</th>\n","      <th>Account Type</th>\n","    </tr>\n","    <tr>\n","      <th>user_id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2.329808e+09</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3240</td>\n","      <td>60</td>\n","      <td>54.000000</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","    <tr>\n","      <th>4.653933e+08</th>\n","      <td>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...</td>\n","      <td>1362</td>\n","      <td>62</td>\n","      <td>21.967742</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","    <tr>\n","      <th>6.127116e+08</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3126</td>\n","      <td>59</td>\n","      <td>52.983051</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","    <tr>\n","      <th>4.671629e+08</th>\n","      <td>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...</td>\n","      <td>1300</td>\n","      <td>65</td>\n","      <td>20.000000</td>\n","      <td>1</td>\n","      <td>Bot</td>\n","    </tr>\n","    <tr>\n","      <th>2.214188e+09</th>\n","      <td>CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...</td>\n","      <td>3169</td>\n","      <td>60</td>\n","      <td>52.816667</td>\n","      <td>0</td>\n","      <td>Genuine</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                            dna  ...  Account Type\n","user_id                                                          ...              \n","2.329808e+09  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","4.653933e+08  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...  ...           Bot\n","6.127116e+08  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","4.671629e+08  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...  ...           Bot\n","2.214188e+09  CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...  ...       Genuine\n","\n","[5 rows x 6 columns]"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"gWQs4otb5OeJ"},"source":["def evaluate(y_test, predictions,n, num_humans):\n","    # Evaluation on the test set.\n","    tn, fp, fn, tp = confusion_matrix(y_test, predictions).ravel()\n","    specificity = tn / (tn+fp)\n","    \n","    res = dict()\n","    res['Accuracy'] = accuracy_score(y_test, predictions)\n","    res['Precision'] = precision_score(y_test, predictions)\n","    res['Recall'] = recall_score(y_test, predictions)\n","    res['F1 Score'] = f1_score(y_test, predictions)\n","    res['Specificity'] = specificity\n","    res['MCC'] = matthews_corrcoef(y_test, predictions)\n","    res['Proportion'] = n / num_humans\n","\n","    return res"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dtiNqM_46SEu"},"source":["def train_predict_evaluate(gen_dna, bot_dna, attribute):\n","    '''Train a Logistic Regression model with given features\n","    using default parameters on a random sample of data.'''\n","    np.random.seed(2601)\n","\n","    results = []\n","\n","    num_bots = list(range(1, 21))\n","    num_humans = 100\n","\n","    for _ in range(1000):\n","        for n in num_bots:\n","            bot_dna_test = bot_dna.sample(2*n)\n","            gen_dna_test = gen_dna.sample(2*num_humans)\n","            \n","            ##### original dna size + compressed dna size\n","            X_train = pd.concat([gen_dna_test[['original_dna_size', attribute]].head(num_humans),\n","                                bot_dna_test[['original_dna_size', attribute]].head(n)])\n","            X_test = pd.concat([gen_dna_test[['original_dna_size', attribute]].tail(num_humans),\n","                                bot_dna_test[['original_dna_size', attribute]].tail(n)])\n","            print(X_test.head(5))\n","\n","            y_train = pd.concat([gen_dna_test.loc[:, 'label'].head(num_humans), \n","                                bot_dna_test.loc[:, 'label'].head(n)])\n","            y_test = pd.concat([gen_dna_test.loc[:, 'label'].tail(num_humans), \n","                                bot_dna_test.loc[:, 'label'].tail(n)])\n","\n","            # Logistic Regression classifier with default parameters.\n","            classifier = LogisticRegression()\n","\n","            # Train the classifier.\n","            classifier.fit(X_train, y_train)\n","            #save classifier here\n","            filename = 'sequence_model.pkl'\n","            pickle.dump(classifier, open(filename, 'wb'))\n","            # classifier.save(\"Sequence_Level.h5\")\n","            # Make predictions on the test set.\n","            predictions = classifier.predict(X_test)\n","            # print(predictions)\n","            # Evaluation on the test set.\n","            res = evaluate(y_test, predictions,n, num_humans)\n","            #print(res)\n","            results.append(res.copy())\n","    results = pd.DataFrame(results)\n","    results = results.groupby(['Proportion']).mean().reset_index()\n","    return results"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":215},"id":"g_NH0Cg7LICX","executionInfo":{"status":"error","timestamp":1638785620802,"user_tz":-330,"elapsed":406,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"}},"outputId":"97ac1832-e079-4022-815f-054314613fde"},"source":["filename = 'sequence_model.pkl'\n","loaded_model = pickle.load(open(filename, 'rb'))\n","res1 = res1[['original_dna_size', 'compressed_dna_size']]\n","res1.head()"],"execution_count":22,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-22-1eceda6dd4c5>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfilename\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'sequence_model.pkl'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mloaded_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpickle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mres1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mres1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'original_dna_size'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'compressed_dna_size'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mres1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'sequence_model.pkl'"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9LmjqlO3OUDs","executionInfo":{"elapsed":10,"status":"ok","timestamp":1634843851193,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"2c15a209-7c49-450c-9c05-48fe22a8a3e2"},"source":["import os\n","os.getcwd()\n","os.listdir('.')\n","\n"],"execution_count":null,"outputs":[{"data":{"text/plain":["['.config', 'drive', 'sequence_model', 'sequence_model.h5', 'sample_data']"]},"execution_count":63,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"k2lQjcbbOsHl"},"source":["from google.colab import files\n","files.download('sequence_model.pkl')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"V3-qaqUfRfKF"},"source":["from google.colab import files\n","files.download('sequence_model')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BmswySNV6T7l","executionInfo":{"elapsed":1106,"status":"ok","timestamp":1634917026629,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"2e2101d0-2fd5-4d15-a2c4-51d89ae3b737"},"source":["results_with_length_1 = train_predict_evaluate(gen_dna_test1, ss1_dna_test1,'compressed_dna_size')"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["             original_dna_size  compressed_dna_size\n","user_id                                            \n","235696520.0               3157                   60\n","213809707.0               3161                   60\n","20307019.0                3103                   59\n","714550385.0                658                   48\n","263842646.0               2893                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.180237e+09               3221                   60\n","2.324053e+09               1264                   51\n","2.711954e+07               1763                   55\n","2.243739e+07               3215                   60\n","3.843379e+07               3212                   60\n","             original_dna_size  compressed_dna_size\n","user_id                                            \n","529296936.0               3257                   60\n","239565588.0                860                   49\n","238665139.0               3238                   60\n","621615487.0               3223                   60\n","27623289.0                 383                   46\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.439265e+08               3172                   60\n","2.083885e+08               3019                   60\n","1.858115e+07                507                   47\n","1.723943e+09               3217                   60\n","4.892506e+08               3182                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.406204e+09               3233                   60\n","1.888349e+09               3209                   60\n","3.555823e+07               3210                   60\n","1.944765e+08               3211                   60\n","2.157773e+08               3138                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","3.056631e+07               3054                   60\n","1.567510e+08               1855                   56\n","1.857633e+07               3190                   60\n","2.290175e+09               3207                   60\n","1.724285e+07               3175                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","1.670962e+09               3209                   60\n","2.591393e+08               3225                   60\n","2.193793e+08               3204                   60\n","1.726805e+09               3230                   60\n","2.273691e+09                236                   45\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.275756e+09                203                   45\n","1.648444e+07               3214                   60\n","6.178726e+08                882                   50\n","7.354826e+08                906                   50\n","4.825177e+08               2703                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","5.831272e+08               3151                   60\n","2.324541e+09                430                   47\n","2.696742e+07                587                   48\n","6.129243e+08                122                   45\n","2.107449e+07               3223                   60\n","             original_dna_size  compressed_dna_size\n","user_id                                            \n","28140565.0                3173                   60\n","635818294.0               1874                   56\n","222290847.0                 87                   45\n","16459227.0                2116                   57\n","753906162.0               3139                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","1.652779e+08               3173                   60\n","5.357588e+08               2053                   56\n","2.444385e+09                425                   47\n","2.387102e+07               3214                   60\n","1.944582e+09               3183                   60\n","             original_dna_size  compressed_dna_size\n","user_id                                            \n","32988810.0                2139                   58\n","25693756.0                3242                   60\n","541142436.0               3062                   60\n","183511605.0               3196                   60\n","16484437.0                3214                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.403625e+08               3179                   60\n","5.233439e+08               3232                   60\n","2.182527e+09               3161                   60\n","1.913659e+08               3075                   60\n","2.324994e+09               3231                   60\n","             original_dna_size  compressed_dna_size\n","user_id                                            \n","251518992.0               3206                   60\n","568388087.0               3139                   60\n","227055399.0               3211                   60\n","177455411.0               3215                   60\n","25759948.0                3165                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","1.933402e+09               3166                   60\n","1.715241e+09               3112                   59\n","7.226230e+05               3180                   60\n","2.374942e+07               3230                   60\n","2.328048e+08               3252                   60\n","             original_dna_size  compressed_dna_size\n","user_id                                            \n","9605632.0                 3111                   59\n","492649414.0               3271                   60\n","636447931.0               1310                   51\n","589834497.0               3247                   60\n","513517863.0               3247                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.272590e+09               3155                   60\n","1.936513e+09               3133                   58\n","2.559120e+08               3217                   60\n","5.831272e+08               3151                   60\n","6.304677e+08               3166                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","2.314132e+09               3212                   60\n","2.388698e+09               2947                   60\n","5.401836e+08               3171                   60\n","5.491811e+08               2940                   60\n","2.150270e+09               3181                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","1.862401e+08               3201                   60\n","1.755539e+08                557                   47\n","2.397197e+09                302                   46\n","2.011138e+08               3238                   60\n","7.435852e+08               3172                   60\n","              original_dna_size  compressed_dna_size\n","user_id                                             \n","1.750487e+08               3224                   60\n","2.482077e+09                956                   50\n","1.640891e+07               3253                   60\n","2.312113e+08               3199                   60\n","4.801042e+08               1053                   50\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"7MFioJOy-Mfu","executionInfo":{"elapsed":413,"status":"ok","timestamp":1633370775723,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"31822e57-febb-4c08-c9ea-dcbe9deca45d"},"source":["results_with_length_1"],"execution_count":null,"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Proportion</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1 Score</th>\n","      <th>Specificity</th>\n","      <th>MCC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.01</td>\n","      <td>0.996139</td>\n","      <td>0.61</td>\n","      <td>0.610000</td>\n","      <td>0.610000</td>\n","      <td>1.0</td>\n","      <td>0.610000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02</td>\n","      <td>0.994608</td>\n","      <td>0.90</td>\n","      <td>0.725000</td>\n","      <td>0.783333</td>\n","      <td>1.0</td>\n","      <td>0.796259</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.03</td>\n","      <td>0.995340</td>\n","      <td>0.99</td>\n","      <td>0.840000</td>\n","      <td>0.893000</td>\n","      <td>1.0</td>\n","      <td>0.901874</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.04</td>\n","      <td>0.996346</td>\n","      <td>1.00</td>\n","      <td>0.905000</td>\n","      <td>0.939429</td>\n","      <td>1.0</td>\n","      <td>0.944207</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.05</td>\n","      <td>0.996476</td>\n","      <td>1.00</td>\n","      <td>0.926000</td>\n","      <td>0.957778</td>\n","      <td>1.0</td>\n","      <td>0.958775</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.06</td>\n","      <td>0.996887</td>\n","      <td>1.00</td>\n","      <td>0.945000</td>\n","      <td>0.968091</td>\n","      <td>1.0</td>\n","      <td>0.968833</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.07</td>\n","      <td>0.996262</td>\n","      <td>1.00</td>\n","      <td>0.942857</td>\n","      <td>0.968170</td>\n","      <td>1.0</td>\n","      <td>0.968021</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.08</td>\n","      <td>0.994167</td>\n","      <td>1.00</td>\n","      <td>0.921250</td>\n","      <td>0.956835</td>\n","      <td>1.0</td>\n","      <td>0.955888</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.09</td>\n","      <td>0.994128</td>\n","      <td>1.00</td>\n","      <td>0.928889</td>\n","      <td>0.960658</td>\n","      <td>1.0</td>\n","      <td>0.959694</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.10</td>\n","      <td>0.993727</td>\n","      <td>1.00</td>\n","      <td>0.931000</td>\n","      <td>0.961899</td>\n","      <td>1.0</td>\n","      <td>0.960608</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.11</td>\n","      <td>0.994054</td>\n","      <td>1.00</td>\n","      <td>0.940000</td>\n","      <td>0.967501</td>\n","      <td>1.0</td>\n","      <td>0.965746</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.12</td>\n","      <td>0.992679</td>\n","      <td>1.00</td>\n","      <td>0.931667</td>\n","      <td>0.962634</td>\n","      <td>1.0</td>\n","      <td>0.960542</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.13</td>\n","      <td>0.992655</td>\n","      <td>1.00</td>\n","      <td>0.936154</td>\n","      <td>0.965517</td>\n","      <td>1.0</td>\n","      <td>0.963012</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.14</td>\n","      <td>0.993596</td>\n","      <td>1.00</td>\n","      <td>0.947857</td>\n","      <td>0.972120</td>\n","      <td>1.0</td>\n","      <td>0.969660</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.15</td>\n","      <td>0.992783</td>\n","      <td>1.00</td>\n","      <td>0.944667</td>\n","      <td>0.970651</td>\n","      <td>1.0</td>\n","      <td>0.967633</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.16</td>\n","      <td>0.992759</td>\n","      <td>1.00</td>\n","      <td>0.947500</td>\n","      <td>0.972144</td>\n","      <td>1.0</td>\n","      <td>0.969044</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.17</td>\n","      <td>0.993333</td>\n","      <td>1.00</td>\n","      <td>0.954118</td>\n","      <td>0.975762</td>\n","      <td>1.0</td>\n","      <td>0.972770</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.18</td>\n","      <td>0.993051</td>\n","      <td>1.00</td>\n","      <td>0.954444</td>\n","      <td>0.975934</td>\n","      <td>1.0</td>\n","      <td>0.972755</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.19</td>\n","      <td>0.992101</td>\n","      <td>1.00</td>\n","      <td>0.950526</td>\n","      <td>0.973936</td>\n","      <td>1.0</td>\n","      <td>0.970205</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.20</td>\n","      <td>0.992167</td>\n","      <td>1.00</td>\n","      <td>0.953000</td>\n","      <td>0.975190</td>\n","      <td>1.0</td>\n","      <td>0.971465</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Proportion  Accuracy  Precision    Recall  F1 Score  Specificity       MCC\n","0         0.01  0.996139       0.61  0.610000  0.610000          1.0  0.610000\n","1         0.02  0.994608       0.90  0.725000  0.783333          1.0  0.796259\n","2         0.03  0.995340       0.99  0.840000  0.893000          1.0  0.901874\n","3         0.04  0.996346       1.00  0.905000  0.939429          1.0  0.944207\n","4         0.05  0.996476       1.00  0.926000  0.957778          1.0  0.958775\n","5         0.06  0.996887       1.00  0.945000  0.968091          1.0  0.968833\n","6         0.07  0.996262       1.00  0.942857  0.968170          1.0  0.968021\n","7         0.08  0.994167       1.00  0.921250  0.956835          1.0  0.955888\n","8         0.09  0.994128       1.00  0.928889  0.960658          1.0  0.959694\n","9         0.10  0.993727       1.00  0.931000  0.961899          1.0  0.960608\n","10        0.11  0.994054       1.00  0.940000  0.967501          1.0  0.965746\n","11        0.12  0.992679       1.00  0.931667  0.962634          1.0  0.960542\n","12        0.13  0.992655       1.00  0.936154  0.965517          1.0  0.963012\n","13        0.14  0.993596       1.00  0.947857  0.972120          1.0  0.969660\n","14        0.15  0.992783       1.00  0.944667  0.970651          1.0  0.967633\n","15        0.16  0.992759       1.00  0.947500  0.972144          1.0  0.969044\n","16        0.17  0.993333       1.00  0.954118  0.975762          1.0  0.972770\n","17        0.18  0.993051       1.00  0.954444  0.975934          1.0  0.972755\n","18        0.19  0.992101       1.00  0.950526  0.973936          1.0  0.970205\n","19        0.20  0.992167       1.00  0.953000  0.975190          1.0  0.971465"]},"execution_count":174,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"jMFLIiyu-Wjk"},"source":["results_with_ratio_1 = train_predict_evaluate(gen_dna_test1, ss1_dna_test1,'compression_ratio')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"Bt4eMCe-dGVy","executionInfo":{"elapsed":348,"status":"ok","timestamp":1633370857966,"user":{"displayName":"Arsh Goyal","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GisemASVGaHXWzHqmYddI0AEXsGF50gA-btcTwbUyI=s64","userId":"11442264974709247993"},"user_tz":-330},"outputId":"d8ba3695-f540-4e32-ec2a-bfcf80267289"},"source":["results_with_ratio_1"],"execution_count":null,"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Proportion</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1 Score</th>\n","      <th>Specificity</th>\n","      <th>MCC</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.01</td>\n","      <td>0.993069</td>\n","      <td>0.313333</td>\n","      <td>0.320000</td>\n","      <td>0.315000</td>\n","      <td>0.9998</td>\n","      <td>0.315715</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02</td>\n","      <td>0.987255</td>\n","      <td>0.581667</td>\n","      <td>0.380000</td>\n","      <td>0.444667</td>\n","      <td>0.9994</td>\n","      <td>0.460389</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.03</td>\n","      <td>0.985049</td>\n","      <td>0.859167</td>\n","      <td>0.500000</td>\n","      <td>0.605952</td>\n","      <td>0.9996</td>\n","      <td>0.636683</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.04</td>\n","      <td>0.981827</td>\n","      <td>0.925434</td>\n","      <td>0.605000</td>\n","      <td>0.695588</td>\n","      <td>0.9969</td>\n","      <td>0.721649</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.05</td>\n","      <td>0.976762</td>\n","      <td>0.908000</td>\n","      <td>0.552000</td>\n","      <td>0.658905</td>\n","      <td>0.9980</td>\n","      <td>0.683943</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.06</td>\n","      <td>0.974245</td>\n","      <td>0.926397</td>\n","      <td>0.626667</td>\n","      <td>0.716809</td>\n","      <td>0.9951</td>\n","      <td>0.734937</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.07</td>\n","      <td>0.969346</td>\n","      <td>0.906713</td>\n","      <td>0.647143</td>\n","      <td>0.725415</td>\n","      <td>0.9919</td>\n","      <td>0.736668</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.08</td>\n","      <td>0.964444</td>\n","      <td>0.907937</td>\n","      <td>0.607500</td>\n","      <td>0.705844</td>\n","      <td>0.9930</td>\n","      <td>0.715406</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.09</td>\n","      <td>0.963670</td>\n","      <td>0.889931</td>\n","      <td>0.675556</td>\n","      <td>0.751982</td>\n","      <td>0.9896</td>\n","      <td>0.749831</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.10</td>\n","      <td>0.959909</td>\n","      <td>0.908467</td>\n","      <td>0.649000</td>\n","      <td>0.737403</td>\n","      <td>0.9910</td>\n","      <td>0.739345</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.11</td>\n","      <td>0.956396</td>\n","      <td>0.891846</td>\n","      <td>0.662727</td>\n","      <td>0.745216</td>\n","      <td>0.9887</td>\n","      <td>0.740157</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.12</td>\n","      <td>0.952500</td>\n","      <td>0.873707</td>\n","      <td>0.681667</td>\n","      <td>0.750673</td>\n","      <td>0.9850</td>\n","      <td>0.740652</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.13</td>\n","      <td>0.947522</td>\n","      <td>0.839910</td>\n","      <td>0.704615</td>\n","      <td>0.752627</td>\n","      <td>0.9791</td>\n","      <td>0.735391</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.14</td>\n","      <td>0.948333</td>\n","      <td>0.861167</td>\n","      <td>0.722143</td>\n","      <td>0.772746</td>\n","      <td>0.9800</td>\n","      <td>0.755519</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.15</td>\n","      <td>0.946435</td>\n","      <td>0.865588</td>\n","      <td>0.724000</td>\n","      <td>0.773060</td>\n","      <td>0.9798</td>\n","      <td>0.756251</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.16</td>\n","      <td>0.942328</td>\n","      <td>0.866752</td>\n","      <td>0.713750</td>\n","      <td>0.769761</td>\n","      <td>0.9789</td>\n","      <td>0.749935</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.17</td>\n","      <td>0.939744</td>\n","      <td>0.856702</td>\n","      <td>0.725882</td>\n","      <td>0.775895</td>\n","      <td>0.9761</td>\n","      <td>0.751164</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.18</td>\n","      <td>0.942288</td>\n","      <td>0.866543</td>\n","      <td>0.750000</td>\n","      <td>0.796754</td>\n","      <td>0.9769</td>\n","      <td>0.770856</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.19</td>\n","      <td>0.938739</td>\n","      <td>0.858138</td>\n","      <td>0.760000</td>\n","      <td>0.796851</td>\n","      <td>0.9727</td>\n","      <td>0.769081</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.20</td>\n","      <td>0.942250</td>\n","      <td>0.892023</td>\n","      <td>0.758500</td>\n","      <td>0.811315</td>\n","      <td>0.9790</td>\n","      <td>0.786766</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Proportion  Accuracy  Precision    Recall  F1 Score  Specificity       MCC\n","0         0.01  0.993069   0.313333  0.320000  0.315000       0.9998  0.315715\n","1         0.02  0.987255   0.581667  0.380000  0.444667       0.9994  0.460389\n","2         0.03  0.985049   0.859167  0.500000  0.605952       0.9996  0.636683\n","3         0.04  0.981827   0.925434  0.605000  0.695588       0.9969  0.721649\n","4         0.05  0.976762   0.908000  0.552000  0.658905       0.9980  0.683943\n","5         0.06  0.974245   0.926397  0.626667  0.716809       0.9951  0.734937\n","6         0.07  0.969346   0.906713  0.647143  0.725415       0.9919  0.736668\n","7         0.08  0.964444   0.907937  0.607500  0.705844       0.9930  0.715406\n","8         0.09  0.963670   0.889931  0.675556  0.751982       0.9896  0.749831\n","9         0.10  0.959909   0.908467  0.649000  0.737403       0.9910  0.739345\n","10        0.11  0.956396   0.891846  0.662727  0.745216       0.9887  0.740157\n","11        0.12  0.952500   0.873707  0.681667  0.750673       0.9850  0.740652\n","12        0.13  0.947522   0.839910  0.704615  0.752627       0.9791  0.735391\n","13        0.14  0.948333   0.861167  0.722143  0.772746       0.9800  0.755519\n","14        0.15  0.946435   0.865588  0.724000  0.773060       0.9798  0.756251\n","15        0.16  0.942328   0.866752  0.713750  0.769761       0.9789  0.749935\n","16        0.17  0.939744   0.856702  0.725882  0.775895       0.9761  0.751164\n","17        0.18  0.942288   0.866543  0.750000  0.796754       0.9769  0.770856\n","18        0.19  0.938739   0.858138  0.760000  0.796851       0.9727  0.769081\n","19        0.20  0.942250   0.892023  0.758500  0.811315       0.9790  0.786766"]},"execution_count":176,"metadata":{},"output_type":"execute_result"}]},{"cell_type":"code","metadata":{"id":"iCye6rn3dH4W"},"source":[""],"execution_count":null,"outputs":[]}]}